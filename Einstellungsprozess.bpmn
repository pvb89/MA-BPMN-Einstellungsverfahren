<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Definitions_0l7oaw0" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.1.0">
  <bpmn:collaboration id="einstellungsprozess2">
    <bpmn:participant id="Participant_1qic911" name="Unternehmen" processRef="Einstellungsprozess" />
    <bpmn:participant id="Participant_0c2oot0" name="Bewerber" />
    <bpmn:messageFlow id="MessageFlow_123srcp" sourceRef="Participant_0c2oot0" targetRef="StartEvent_0alzcmk" />
  </bpmn:collaboration>
  <bpmn:process id="Einstellungsprozess" isExecutable="true">
    <bpmn:laneSet id="LaneSet_1efw9kx">
      <bpmn:lane id="Lane_06k2vkf" name="Abteilungsleiter">
        <bpmn:flowNodeRef>UserTask_10livbr</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>StartEvent_0alzcmk</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Task_14yp37t</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>BoundaryEvent_1bv7xso</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>SubProcess_1y835fx</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>EndEvent_04jmvmk</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>ReceiveTask_1szg1lm</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>SubProcess_0xh5nn6</bpmn:flowNodeRef>
      </bpmn:lane>
    </bpmn:laneSet>
    <bpmn:sequenceFlow id="SequenceFlow_13iw3fp" sourceRef="StartEvent_0alzcmk" targetRef="UserTask_10livbr" />
    <bpmn:sequenceFlow id="SequenceFlow_0chq9yi" sourceRef="UserTask_10livbr" targetRef="SubProcess_0xh5nn6" />
    <bpmn:sequenceFlow id="SequenceFlow_1p4zgav" sourceRef="Task_14yp37t" targetRef="SubProcess_0xh5nn6" />
    <bpmn:sequenceFlow id="SequenceFlow_00nzpoo" sourceRef="BoundaryEvent_1bv7xso" targetRef="Task_14yp37t" />
    <bpmn:userTask id="UserTask_10livbr" name="50 Bewerbungen sammeln" camunda:assignee="demo">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:outputParameter name="anzahlBewerbung">2</camunda:outputParameter>
        </camunda:inputOutput>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="Javascript">// SpinJSON erstellen 
var jsonObject = S('{ "bewerber":[]}');

// JSON Object speichern
execution.setVariable("bewerberJSON", jsonObject);

// Zähler erstellen
var zahler = 0;

// Zähler speichern
execution.setVariable("zahlerAuslesen", zahler);
execution.setVariable("zahlerEndauswahl", zahler); 
execution.setVariable("zahlerTerminfindung", zahler);</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_13iw3fp</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0chq9yi</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:boundaryEvent id="BoundaryEvent_1bv7xso" name="3 Monate" attachedToRef="UserTask_10livbr">
      <bpmn:outgoing>SequenceFlow_00nzpoo</bpmn:outgoing>
      <bpmn:timerEventDefinition>
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT5M</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:boundaryEvent>
    <bpmn:startEvent id="StartEvent_0alzcmk" name="Bewerbung eingegangen">
      <bpmn:outgoing>SequenceFlow_13iw3fp</bpmn:outgoing>
      <bpmn:messageEventDefinition messageRef="Message_19g0htf" />
    </bpmn:startEvent>
    <bpmn:userTask id="Task_14yp37t" name="Anzahl der eingegangenen Bewerbungen eintragen" camunda:assignee="demo">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="anzahlBewerbung" label="Anzahl der eingegangenen Bewerbungen eingeben:" type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_00nzpoo</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1p4zgav</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:subProcess id="SubProcess_0xh5nn6" name="Vorauswahl">
      <bpmn:incoming>SequenceFlow_0chq9yi</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1p4zgav</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_01sxoie</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true">
        <bpmn:loopCardinality xsi:type="bpmn:tFormalExpression">${anzahlBewerbung}</bpmn:loopCardinality>
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:businessRuleTask id="BusinessRuleTask_0yzxeg8" name="Vorauswahl des Bewerbers durchführen" camunda:resultVariable="einladung" camunda:decisionRef="Decision_1tje05x" camunda:mapDecisionResult="singleEntry">
        <bpmn:incoming>SequenceFlow_1wwekld</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_1wayq4a</bpmn:outgoing>
      </bpmn:businessRuleTask>
      <bpmn:startEvent id="StartEvent_0xl9vju" name="Bewerbungen eingesammelt">
        <bpmn:outgoing>SequenceFlow_0i7kek2</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:endEvent id="EndEvent_1l270wu" name="Vorauswahl abgeschlossen">
        <bpmn:incoming>SequenceFlow_0gp0j27</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="SequenceFlow_0i7kek2" sourceRef="StartEvent_0xl9vju" targetRef="UserTask_0mqmsv1" />
      <bpmn:userTask id="UserTask_0mqmsv1" name="Bewerberdaten eingeben" camunda:assignee="demo">
        <bpmn:extensionElements>
          <camunda:formData>
            <camunda:formField id="vorname" label="Vorname:" type="string" />
            <camunda:formField id="nachname" label="Nachname:" type="string" />
            <camunda:formField id="geburtsdatum" label="Geburtsdatum:" type="date" />
            <camunda:formField id="studium" label="Vorhandenes Studium?" type="boolean" />
            <camunda:formField id="nc" label="Notendurchschnitt:" type="enum">
              <camunda:value id="a" name="&#60; 2.0" />
              <camunda:value id="b" name="2.0 - 3.0" />
              <camunda:value id="c" name="&#62; 3.0" />
            </camunda:formField>
            <camunda:formField id="berufserfahrung" label="Berufserfahrung:" type="enum" defaultValue="b">
              <camunda:value id="a" name="Weniger als 2 Jahre" />
              <camunda:value id="b" name="Genau oder mehr als 2 Jahre" />
            </camunda:formField>
            <camunda:formField id="gehaltsvorstellung" label="Gehaltsvorstellung:" type="long" />
            <camunda:formField id="ehrenamt" label="Ehrenamt:" type="boolean" />
            <camunda:formField id="mail" label="eMail Adresse:" type="string" />
          </camunda:formData>
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_0i7kek2</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_1wwekld</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:sequenceFlow id="SequenceFlow_0gp0j27" sourceRef="Task_0vgp3lt" targetRef="EndEvent_1l270wu" />
      <bpmn:scriptTask id="Task_0vgp3lt" name="Bewerberdaten speichern" scriptFormat="Javascript">
        <bpmn:incoming>SequenceFlow_1wayq4a</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0gp0j27</bpmn:outgoing>
        <bpmn:script>// DMN Output auslesen
var einladung = execution.getVariable("einladung", einladung);

// Selbsterklärend
if (einladung == true) {

var bewerberJSON = execution.getVariable("bewerberJSON");

// Variablen ziehen
variableVorname = execution.getVariable("vorname");
variableNachname = execution.getVariable("nachname");
variableGeburtsdatum = execution.getVariable("geburtsdatum");
variableStudium = execution.getVariable("studium");
variableNC = execution.getVariable("nc");
variableBerufserfahrung = execution.getVariable("berufserfahrung");
variableGehaltsvorstellung = execution.getVariable("gehaltsvorstellung");
variableEhrenamt = execution.getVariable("ehrenamt");
variableMail = execution.getVariable("mail");

// Geburtsdatum ISO konform
// variableGeburtsdatumISO = variableGeburtsdatum.toString();


// String fürs JSON generieren
var str = "{\"vorname\":\"" + variableVorname + "\",\"nachname\":\"" + variableNachname + "\",\"geburtsdatum\":\"" + variableGeburtsdatum + "\",\"studium\":" + variableStudium + ",\"nc\":\"" + variableNC + "\",\"berufserfahrung\":\"" + variableBerufserfahrung + "\",\"gehaltsvorstellung\":" + variableGehaltsvorstellung + ",\"ehrenamt\":" + variableEhrenamt + ",\"eMail\":\"" + variableMail + "\"}";

// String zu SpinJSON convertieren
var bewerberEntry = S(str);

// SpinJSON dem bisherigen SpinJSON anhängen
bewerberJSON.prop("bewerber").append(bewerberEntry);

// Neue SpinJSON speichern
execution.setVariable("bewerberJSON", bewerberJSON);

}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="SequenceFlow_1wayq4a" sourceRef="BusinessRuleTask_0yzxeg8" targetRef="Task_0vgp3lt" />
      <bpmn:sequenceFlow id="SequenceFlow_1wwekld" sourceRef="UserTask_0mqmsv1" targetRef="BusinessRuleTask_0yzxeg8" />
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="SequenceFlow_01sxoie" sourceRef="SubProcess_0xh5nn6" targetRef="ReceiveTask_1szg1lm" />
    <bpmn:subProcess id="SubProcess_1y835fx" name="Endauswahl">
      <bpmn:incoming>SequenceFlow_1mtm6qa</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0mo6i87</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${bewerberJSON.prop(&#34;bewerber&#34;).elements()}" camunda:elementVariable="bewerber" />
      <bpmn:manualTask id="UserTask_0akgokb" name="Bewerberinterview führen">
        <bpmn:incoming>SequenceFlow_0ryzbqw</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0i2gv0z</bpmn:outgoing>
      </bpmn:manualTask>
      <bpmn:userTask id="UserTask_10ebss4" name="Daten eingeben" camunda:assignee="demo">
        <bpmn:extensionElements>
          <camunda:formData>
            <camunda:formField id="bewerber" label="Name des Bewerbers:" type="string" />
            <camunda:formField id="aufgabenErgebnis" label="Aufgaben im Vorstellungsgespräch gelöst?" type="boolean" />
            <camunda:formField id="fachlicheEignung" label=" Fachliche Eignung gegeben?" type="boolean" />
            <camunda:formField id="personlicherEindruck" label="Persönlicher Eindruck vom Bewerber nach dem Vorstellungsgespräch:" type="enum">
              <camunda:value id="a" name="sehr gut" />
              <camunda:value id="b" name="gut" />
              <camunda:value id="c" name="befriedigend" />
            </camunda:formField>
          </camunda:formData>
          <camunda:executionListener event="start">
            <camunda:script scriptFormat="Javascript">// SpinJSON laden
var bewerberJSON = execution.getVariable("bewerberJSON");

// Zähler laden - um immer an das naechste Array im SpinJSON zu gelangen
var zahlerAuslesen = execution.getVariable("zahlerEndauswahl");

// Erstes Array des SpinJSON auslesen 
var jsonVorname = S(bewerberJSON).prop("bewerber").elements().get(zahlerAuslesen).prop("vorname").value();
var jsonNachname = S(bewerberJSON).prop("bewerber").elements().get(zahlerAuslesen).prop("nachname").value();

var bewerber = jsonVorname + " " + jsonNachname;

// Ausgabevariablen setzen
execution.setVariable("bewerber", bewerber);

// Zahler erhöhen und neuen Datensatz speichern
newZahler = zahlerAuslesen + 1 ;
execution.setVariable("zahlerAuslesen", newZahler);</camunda:script>
          </camunda:executionListener>
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_0i2gv0z</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_154q45m</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:businessRuleTask id="BusinessRuleTask_1n5vmyh" name="Entscheidung für den Bewerber treffen" camunda:resultVariable="einstellen" camunda:decisionRef="Decision_12mus5o" camunda:mapDecisionResult="singleEntry">
        <bpmn:incoming>SequenceFlow_154q45m</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_09w4jz6</bpmn:outgoing>
      </bpmn:businessRuleTask>
      <bpmn:userTask id="Task_19fzmr7" name="Entscheidung für den Bewerber erhalten" camunda:assignee="demo">
        <bpmn:extensionElements>
          <camunda:formData>
            <camunda:formField id="bewerber" label="Name des Bewerbers:" type="string" />
            <camunda:formField id="einstellen" label="Wird der Bewerber eingestellt?" type="string" />
          </camunda:formData>
          <camunda:executionListener event="start">
            <camunda:script scriptFormat="Javascript">// DMN Output in Variable speichern
execution.setVariable("einstellen", einstellen);

// Bewerbername laden
execution.getVariable("bewerber", bewerber);

// JSON laden
var bewerberJSON = execution.getVariable("bewerberJSON");

// Zähler laden
var zahlerEndauswahl = execution.getVariable("zahlerEndauswahl")

// Variablen ziehen
variableFachlicheEignung = execution.getVariable("fachlicheEignung");
variableAufgabenErgebnis = execution.getVariable("aufgabenErgebnis");
variablePersonlicherEindruck = execution.getVariable("personlicherEindruck");
variableEinstellen = execution.getVariable("einstellen");

// String fürs JSON generieren
// var str = "{\"fachlicheEignung\":\"" + variableFachlicheEignung + "\",\"aufgabenErgebnis\":" + variableAufgabenErgebnis + ",\"personlicherEindruck\":" + variablePersonlicherEindruck + "}";

var str = "{\"personlicherEindruck\":\"" + variablePersonlicherEindruck + "\",\"aufgabenErgebnis\":" + variableAufgabenErgebnis + ",\"fachlicheEignung\":" + variableFachlicheEignung + "}";

// String zu SpinJSON convertieren
var bewerberEntry = S(str);

// JSON dem bisherigen JSON anhängen
bewerberJSON.prop("bewerber").elements().get(zahlerEndauswahl).prop("fachlicheEignung", variableFachlicheEignung);
bewerberJSON.prop("bewerber").elements().get(zahlerEndauswahl).prop("aufgabenErgebnis", variableAufgabenErgebnis);
bewerberJSON.prop("bewerber").elements().get(zahlerEndauswahl).prop("personlicherEindruck", variablePersonlicherEindruck);
bewerberJSON.prop("bewerber").elements().get(zahlerEndauswahl).prop("einstellung", variableEinstellen);

// Zähler erhöhen
newZahler = zahlerEndauswahl + 1 ;
execution.setVariable("zahlerEndauswahl", newZahler);

// Neue JSON speichern
execution.setVariable("bewerberJSON", bewerberJSON);</camunda:script>
          </camunda:executionListener>
        </bpmn:extensionElements>
        <bpmn:incoming>SequenceFlow_09w4jz6</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0f1w5nb</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:startEvent id="StartEvent_0pelgdn" name="Gesprächstermine gefunden">
        <bpmn:outgoing>SequenceFlow_0ryzbqw</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:sequenceFlow id="SequenceFlow_0ryzbqw" sourceRef="StartEvent_0pelgdn" targetRef="UserTask_0akgokb" />
      <bpmn:sequenceFlow id="SequenceFlow_0i2gv0z" sourceRef="UserTask_0akgokb" targetRef="UserTask_10ebss4" />
      <bpmn:sequenceFlow id="SequenceFlow_154q45m" sourceRef="UserTask_10ebss4" targetRef="BusinessRuleTask_1n5vmyh" />
      <bpmn:sequenceFlow id="SequenceFlow_09w4jz6" sourceRef="BusinessRuleTask_1n5vmyh" targetRef="Task_19fzmr7" />
      <bpmn:endEvent id="EndEvent_1kltl9j" name="Bewerber ist ausgewählt">
        <bpmn:incoming>SequenceFlow_0f1w5nb</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="SequenceFlow_0f1w5nb" sourceRef="Task_19fzmr7" targetRef="EndEvent_1kltl9j" />
    </bpmn:subProcess>
    <bpmn:endEvent id="EndEvent_04jmvmk" name="Bewerber ist eingestellt">
      <bpmn:incoming>SequenceFlow_0mo6i87</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:callActivity id="ReceiveTask_1szg1lm" name="Termin finden" calledElement="Terminfindung2">
      <bpmn:extensionElements>
        <camunda:in variables="all" />
        <camunda:out variables="all" />
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_01sxoie</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1mtm6qa</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${bewerberJSON.prop(&#34;bewerber&#34;).elements()}" />
    </bpmn:callActivity>
    <bpmn:sequenceFlow id="SequenceFlow_1mtm6qa" sourceRef="ReceiveTask_1szg1lm" targetRef="SubProcess_1y835fx" />
    <bpmn:sequenceFlow id="SequenceFlow_0mo6i87" sourceRef="SubProcess_1y835fx" targetRef="EndEvent_04jmvmk" />
  </bpmn:process>
  <bpmn:message id="Message_19g0htf" name="message" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="einstellungsprozess2">
      <bpmndi:BPMNShape id="Participant_1qic911_di" bpmnElement="Participant_1qic911" isHorizontal="true">
        <dc:Bounds x="144" y="198" width="1965" height="317" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_06k2vkf_di" bpmnElement="Lane_06k2vkf" isHorizontal="true">
        <dc:Bounds x="174" y="198" width="1935" height="317" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_10livbr_di" bpmnElement="UserTask_10livbr">
        <dc:Bounds x="287" y="280" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BusinessRuleTask_0yzxeg8_di" bpmnElement="BusinessRuleTask_0yzxeg8">
        <dc:Bounds x="714" y="297" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BoundaryEvent_0lhhl03_di" bpmnElement="BoundaryEvent_1bv7xso">
        <dc:Bounds x="319" y="342" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="347" y="379" width="46" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BusinessRuleTask_1n5vmyh_di" bpmnElement="BusinessRuleTask_1n5vmyh">
        <dc:Bounds x="1626" y="299" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_10ebss4_di" bpmnElement="UserTask_10ebss4">
        <dc:Bounds x="1486" y="299" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="EndEvent_04jmvmk_di" bpmnElement="EndEvent_04jmvmk">
        <dc:Bounds x="2024" y="314" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2016" y="357" width="63" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_1cn824a_di" bpmnElement="Task_19fzmr7">
        <dc:Bounds x="1759" y="299" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ManualTask_1gz6h0w_di" bpmnElement="UserTask_0akgokb">
        <dc:Bounds x="1347" y="299" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="MessageFlow_123srcp_di" bpmnElement="MessageFlow_123srcp">
        <di:waypoint x="242" y="160" />
        <di:waypoint x="242" y="302" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_08f3k6d_di" bpmnElement="Participant_0c2oot0" isHorizontal="true">
        <dc:Bounds x="144" y="85" width="1962" height="75" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="SubProcess_0xh5nn6_di" bpmnElement="SubProcess_0xh5nn6" isExpanded="true">
        <dc:Bounds x="464" y="241" width="594" height="183" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="StartEvent_0xl9vju_di" bpmnElement="StartEvent_0xl9vju">
        <dc:Bounds x="511" y="319" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="494" y="362" width="70" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_13iw3fp_di" bpmnElement="SequenceFlow_13iw3fp">
        <di:waypoint x="260" y="320" />
        <di:waypoint x="287" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_1l270wu_di" bpmnElement="EndEvent_1l270wu">
        <dc:Bounds x="988" y="319" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="969" y="362" width="74" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0i7kek2_di" bpmnElement="SequenceFlow_0i7kek2">
        <di:waypoint x="547" y="337" />
        <di:waypoint x="576" y="337" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="SubProcess_1y835fx_di" bpmnElement="SubProcess_1y835fx" isExpanded="true">
        <dc:Bounds x="1225" y="241" width="745" height="181" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1mtm6qa_di" bpmnElement="SequenceFlow_1mtm6qa">
        <di:waypoint x="1195" y="332" />
        <di:waypoint x="1225" y="332" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="StartEvent_0pelgdn_di" bpmnElement="StartEvent_0pelgdn">
        <dc:Bounds x="1266" y="321" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1240" y="364" width="90" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0ryzbqw_di" bpmnElement="SequenceFlow_0ryzbqw">
        <di:waypoint x="1302" y="339" />
        <di:waypoint x="1347" y="339" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0i2gv0z_di" bpmnElement="SequenceFlow_0i2gv0z">
        <di:waypoint x="1447" y="339" />
        <di:waypoint x="1486" y="339" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_154q45m_di" bpmnElement="SequenceFlow_154q45m">
        <di:waypoint x="1586" y="339" />
        <di:waypoint x="1626" y="339" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_09w4jz6_di" bpmnElement="SequenceFlow_09w4jz6">
        <di:waypoint x="1726" y="339" />
        <di:waypoint x="1759" y="339" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_1kltl9j_di" bpmnElement="EndEvent_1kltl9j">
        <dc:Bounds x="1895" y="321" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1882" y="364" width="63" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0mo6i87_di" bpmnElement="SequenceFlow_0mo6i87">
        <di:waypoint x="1970" y="332" />
        <di:waypoint x="2024" y="332" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="UserTask_1sqlunn_di" bpmnElement="UserTask_0mqmsv1">
        <dc:Bounds x="576" y="297" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="StartEvent_101hnxv_di" bpmnElement="StartEvent_0alzcmk">
        <dc:Bounds x="224" y="302" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="210" y="343" width="64" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_0uahrf4_di" bpmnElement="Task_14yp37t">
        <dc:Bounds x="287" y="402" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0gp0j27_di" bpmnElement="SequenceFlow_0gp0j27">
        <di:waypoint x="944" y="337" />
        <di:waypoint x="988" y="337" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ScriptTask_1gzpetd_di" bpmnElement="Task_0vgp3lt">
        <dc:Bounds x="844" y="297" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1wayq4a_di" bpmnElement="SequenceFlow_1wayq4a">
        <di:waypoint x="814" y="337" />
        <di:waypoint x="844" y="337" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="CallActivity_0yxxbvu_di" bpmnElement="ReceiveTask_1szg1lm">
        <dc:Bounds x="1095" y="293" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_01sxoie_di" bpmnElement="SequenceFlow_01sxoie">
        <di:waypoint x="1058" y="333" />
        <di:waypoint x="1095" y="333" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1wwekld_di" bpmnElement="SequenceFlow_1wwekld">
        <di:waypoint x="676" y="337" />
        <di:waypoint x="714" y="337" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0f1w5nb_di" bpmnElement="SequenceFlow_0f1w5nb">
        <di:waypoint x="1859" y="339" />
        <di:waypoint x="1895" y="339" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0chq9yi_di" bpmnElement="SequenceFlow_0chq9yi">
        <di:waypoint x="387" y="320" />
        <di:waypoint x="464" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1p4zgav_di" bpmnElement="SequenceFlow_1p4zgav">
        <di:waypoint x="387" y="442" />
        <di:waypoint x="426" y="442" />
        <di:waypoint x="426" y="342" />
        <di:waypoint x="464" y="342" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_00nzpoo_di" bpmnElement="SequenceFlow_00nzpoo">
        <di:waypoint x="337" y="378" />
        <di:waypoint x="337" y="409" />
        <di:waypoint x="337" y="402" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
